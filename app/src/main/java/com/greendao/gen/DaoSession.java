package com.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import model.MovieCritics;
import model.MoviesWannaWatch;

import com.greendao.gen.MovieCriticsDao;
import com.greendao.gen.MoviesWannaWatchDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig movieCriticsDaoConfig;
    private final DaoConfig moviesWannaWatchDaoConfig;

    private final MovieCriticsDao movieCriticsDao;
    private final MoviesWannaWatchDao moviesWannaWatchDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        movieCriticsDaoConfig = daoConfigMap.get(MovieCriticsDao.class).clone();
        movieCriticsDaoConfig.initIdentityScope(type);

        moviesWannaWatchDaoConfig = daoConfigMap.get(MoviesWannaWatchDao.class).clone();
        moviesWannaWatchDaoConfig.initIdentityScope(type);

        movieCriticsDao = new MovieCriticsDao(movieCriticsDaoConfig, this);
        moviesWannaWatchDao = new MoviesWannaWatchDao(moviesWannaWatchDaoConfig, this);

        registerDao(MovieCritics.class, movieCriticsDao);
        registerDao(MoviesWannaWatch.class, moviesWannaWatchDao);
    }
    
    public void clear() {
        movieCriticsDaoConfig.clearIdentityScope();
        moviesWannaWatchDaoConfig.clearIdentityScope();
    }

    public MovieCriticsDao getMovieCriticsDao() {
        return movieCriticsDao;
    }

    public MoviesWannaWatchDao getMoviesWannaWatchDao() {
        return moviesWannaWatchDao;
    }

}
